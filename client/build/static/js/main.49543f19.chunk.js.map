{"version":3,"sources":["components/Image.js","components/Type.js","components/Info.js","components/Search.js","components/ListItem.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Image","props","className","onMouseOver","e","target","src","back","onMouseLeave","front","alt","onClick","catch","caught","name","Type","changeType","type","Info","pokemon","catchHandler","weight","height","types","pictures","map","Search","useState","input","setInput","valid","onChange","value","handler","ListItem","change","img","List","Array","isArray","length","class","item","icon","axios","require","App","setPokemon","collection","setCollection","validate","isValid","shownType","changePokemon","get","route","then","res","data","err","showCollection","console","log","message","useEffect","id","includes","delete","post","newType","pokemonName","find","collectionPokemon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49543f19.chunk.js","sourcesContent":["const Image = (props) => (\r\n  <div className=\"img-div\">\r\n    <img\r\n      className=\"info-img\"\r\n      onMouseOver={(e) => (e.target.src = props.back)}\r\n      onMouseLeave={(e) => (e.target.src = props.front)}\r\n      src={props.front}\r\n      alt=\"\"\r\n    />\r\n    <button\r\n      className=\"catch-button\"\r\n      onClick={(e) => {\r\n        props.catch();\r\n      }}\r\n    >\r\n      {props.caught(props.name)}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Image;\r\n","const Type = (props) => (\r\n  <span\r\n    onClick={() => props.changeType(props.type)}\r\n    className={`type-span ${props.type}`}\r\n  >\r\n    <h2>{props.type}</h2>\r\n  </span>\r\n);\r\n\r\nexport default Type;\r\n","import Image from \"./Image\";\r\nimport Type from \"./Type\";\r\nconst Info = ({ pokemon, catchHandler, changeType, caught }) => {\r\n  const { name, weight, height, types, pictures } = pokemon;\r\n  return (\r\n    <div className=\"info-block\">\r\n      {name !== \"\" && (\r\n        <Image\r\n          catch={catchHandler}\r\n          front={pictures[\"front\"]}\r\n          back={pictures[\"back\"]}\r\n          caught={caught}\r\n          name={name}\r\n        />\r\n      )}\r\n      <h3 className=\"info-name\">{name}</h3>\r\n      <span className=\"info-types\">\r\n        {types.map((type) => (\r\n          <Type key={type} type={type} changeType={changeType} />\r\n        ))}\r\n      </span>\r\n      <h2 className=\"info-height\">{\"HEIGHT: \" + height}</h2>\r\n      <h2 className=\"info-weight\">{\"WEIGHT: \" + weight}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import { useState } from \"react\";\r\nconst Search = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  return (\r\n    <span className=\"search-span\">\r\n      <p>{props.valid === false ? \"Pokemon not found\" : \"\"}</p>\r\n      <input onChange={(e) => setInput(e.target.value)} type=\"text\" />\r\n      <button onClick={() => props.handler(input)}>\r\n        search pokemon\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","const ListItem = (props) => (\r\n  <div className=\"list-item\" onClick={() => props.change(props.name)}>\r\n    <img className=\"icon\" src={props.img} alt=\"\" />\r\n    <span>{props.name}</span>\r\n  </div>\r\n);\r\nexport default ListItem;\r\n","import ListItem from \"./ListItem\";\r\nconst List = (props) => {\r\n  if (Array.isArray(props.pokemon) && props.pokemon.length > 0) {\r\n    if (props.class === \"types-list\")\r\n      return (\r\n        <div className={props.class}>\r\n          {props.pokemon.map((item) => (\r\n            <ListItem key={item} name={item} change={props.change} />\r\n          ))}\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className={props.class}>\r\n          {props.pokemon.map((item) => (\r\n            <ListItem\r\n              key={item.name}\r\n              name={item.name}\r\n              change={props.change}\r\n              img={item.pictures.icon}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default List;\r\n","import \"./Styles/App.css\";\r\nimport \"./Styles/fonts/font.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Info from \"./components/Info\";\r\nimport Search from \"./components/Search\";\r\nimport List from \"./components/List\";\r\n\r\nconst axios = require(\"axios\");\r\nconst route = \"/api/\";\r\nfunction App() {\r\n  const [pokemon, setPokemon] = useState({\r\n    name: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    types: [],\r\n  });\r\n\r\n  const [collection, setCollection] = useState([]);\r\n  const [validate, isValid] = useState(true);\r\n  const [shownType, changeType] = useState([]);\r\n\r\n  useEffect(() => showCollection(), []);\r\n\r\n  function caughtPokemon(pokemonName) {\r\n    console.log(collection);\r\n    if (\r\n      collection.find(\r\n        (collectionPokemon) => collectionPokemon.name === pokemonName\r\n      )\r\n    ) {\r\n      return \"release\";\r\n    } else return \"catch\";\r\n  }\r\n\r\n  function changePokemon(input) {\r\n    axios\r\n      .get(route + \"pokemon/\" + input)\r\n      .then((res) => {\r\n        setPokemon(res.data);\r\n        isValid(true);\r\n      })\r\n      .catch((err) => isValid(false));\r\n  }\r\n\r\n  function catchAndRelease() {\r\n    axios\r\n      .get(route + \"collection\")\r\n      .then((collection) => {\r\n        let data = [...collection.data];\r\n        const idArray = data.map((value) => value.id);\r\n        if (!idArray.includes(pokemon.id)) {\r\n          axios\r\n            .post(route + \"collection/catch\", pokemon)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              showCollection();\r\n            })\r\n            .catch((err) => console.log(err.message));\r\n        } else {\r\n          axios\r\n            .delete(route + \"collection/release/\" + pokemon.name)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              showCollection();\r\n            })\r\n            .catch((err) => console.log(err.message));\r\n        }\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  function expandType(type) {\r\n    axios\r\n      .get(route + \"type/\" + type)\r\n      .then((res) => {\r\n        changeType(res.data);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  function changeShownType(newType) {\r\n    axios\r\n      .get(route + \"type/\" + newType)\r\n      .then(() => expandType(newType))\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  function showCollection() {\r\n    axios\r\n      .get(route + \"collection\")\r\n      .then((res) => {\r\n        setCollection(res.data);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"gameboy-div\">\r\n        <h1>Pokedex</h1>\r\n        <Search handler={changePokemon} valid={validate} />\r\n        <Info\r\n          pokemon={pokemon}\r\n          catchHandler={catchAndRelease}\r\n          changeType={changeShownType}\r\n          caught={caughtPokemon}\r\n        />\r\n      </div>\r\n      <List\r\n        class=\"types-list\"\r\n        pokemon={shownType}\r\n        change={changePokemon}\r\n      />\r\n      <List\r\n        class=\"collection-list\"\r\n        pokemon={collection}\r\n        change={changePokemon}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}